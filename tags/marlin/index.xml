<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>marlin on Ben Sycha</title><link>https://ben.sycha.uk/tags/marlin/</link><description>Recent content in marlin on Ben Sycha</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Wed, 01 Mar 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://ben.sycha.uk/tags/marlin/index.xml" rel="self" type="application/rss+xml"/><item><title>How to quickly tram a FDM print bed</title><link>https://ben.sycha.uk/til/how-to-quickly-tram-fdm-print-bed/</link><pubDate>Wed, 01 Mar 2023 00:00:00 +0000</pubDate><guid>https://ben.sycha.uk/til/how-to-quickly-tram-fdm-print-bed/</guid><description>Problem I have never been a big fan of the using a piece of paper under the nozzle to tram different spots on the bed and I have always wanted to quickly just know the difference in height at each bed screw. I have a BLTouch installed so there has to be a better way.
First solution I started off by using an OctoPrint macro plugin to move the head to screw positions and then use G30 to probe the distance.</description><content:encoded><![CDATA[<h2 id="problem">Problem</h2>
<p>I have never been a big fan of the using a piece of paper under the nozzle to tram different spots on the bed and I have always wanted to quickly just know the difference in height at each bed screw. I have a BLTouch installed so there has to be a better way.</p>
<h2 id="first-solution">First solution</h2>
<p>I started off by using an OctoPrint macro plugin to move the head to screw positions and then use <em>G30</em> to probe the distance. This was helpful but the feedback was spread over many response messages and I would have to work out the offset relevant to a particular screw. Doable but a bit to much hunting for values and maths in my head.</p>
<h2 id="best-solution-so-far">Best solution so far</h2>
<p>Then I found <a href="https://marlinfw.org/docs/gcode/G035.html"><em><strong>G35 Tramming Assistant</strong></em></a> in the marlin firmware.</p>
<p>I recompiled my firmware after updating these definitions:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#75715e">#define ASSISTED_TRAMMING
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#define TRAMMING_POINT_XY { {  31, 31 }, { 271,  31 }, { 271, 271 }, { 31, 271 } }
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#define REPORT_TRAMMING_MM 
</span></span></span></code></pre></div><p>Now when I run <em>G35</em> all screw positions are probed and I get a simple readout like:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-plaintext" data-lang="plaintext"><span style="display:flex;"><span>Turn Front-Right CW by 0 turns and 3 minutes (-0.0300mm)
</span></span><span style="display:flex;"><span>Turn Back-Right CCW by 0 turns and 6 minutes (0.0525mm)
</span></span><span style="display:flex;"><span>Turn Back-Left CW by 0 turns and 6 minutes (-0.0550mm)
</span></span></code></pre></div><p>Simple, easy to follow and saves me some brain cycles.</p>
]]></content:encoded></item></channel></rss>